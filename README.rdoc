= Harvestdor

A Gem to harvest metadata from DOR.

== Installation

Add this line to your application's Gemfile:

    gem 'harvestdor'

And then execute:

    $ bundle

Or install it yourself as:

    $ gem install harvestdor

== Usage

=== Configuration

Configuration Option 1:  use a yaml file

	# contents of oai.yml
	dev:
	  url: ...
	  http_options: 
	  metadataPrefix: 'tei'
	  set: 'isGovernedBy:hy787xj5878'
	  from: '..'
	  until: ''
	  wantum: records or ids

	client = Harvestdor.new(MY_OAI_YML_PATH/oai.yml, :options => {})
	client.harvest_ids do |druid|
	  # do stuff with the druid, e.g. 
	  #  get public xml from purl
	  #  get mods from purl
	  #  create solr doc
	  #  write solr doc to your app's index
	end

Configuration Option 2:  set the attributes explicitly in your code

  client = Harvestdor.new(:options => {})
	client.metadataPrefix = 'mods'
	client.harvest_records do |rec|
	  # do stuff with the OAI rec, e.g.
	  #  manipulate metadata into solr doc
	  #  manipulate stuff from record.about into solr doc
	  #  write solr doc to your app's index
	end

Configuration Option 3:  set the OAI parameters as params in call to Harvestdor.harvest_

  client = Harvestdor.new(:options => {})
  client.harvest_ids(:metadataPrefix => 'foo', :from => '2012-11-27', :set => 'isGovernedBy:hy787xj5878') do | id |
    # do stuff with the druid
  end

=== Harvesting

harvest_ids  gets enumerated druids for the records in your specified set / date range

harvest_records  gets enumerated OAI record objects in your specified set / data range, with the metadata format you indicated

You can also get these as arrays:

druid_array = client.harvest_ids(:metadataPrefix => 'foo', :from => '(last_harvested_date)', :set => 'asdfasdf')


=== Last Harvested Datestamp

last_datestamp


=== FIXME:  for workflow update gem, when we get there

get workflow_update gem
write "indexed_for_sw_on_today" in workflow datastream


== Contributing

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Write code and tests.
4. Commit your changes (`git commit -am 'Added some feature'`)
5. Push to the branch (`git push origin my-new-feature`)
6. Create new Pull Request

== Releases

0.0.1 initial commit
